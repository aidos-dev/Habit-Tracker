# Build stage
FROM golang:1.20.1-alpine3.17 AS build

LABEL build=temp

RUN go version

WORKDIR /app

COPY go.mod ./
COPY go.sum ./

# COPY ./ ./
# COPY migrate ./

COPY /telegram ./telegram
COPY /pkg ./pkg

RUN ls -lah


# build go app
RUN go mod download

# install migrate to do database migration
# RUN go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest

RUN go build -o tg-bot-habit ./telegram/cmd/main.go




# Final stage
FROM alpine:3.17

RUN apk update

# install psql
RUN apk add --no-cache postgresql-client

WORKDIR /app

COPY --from=build /app/tg-bot-habit .
# COPY telegram/build/wait-for-postgres.sh /app/build/
COPY telegram/build/.env /app/build/
# COPY telegram/config/telegramToken.go /app/config/

# Set the environment variable from the .env file
ENV TG_TOKEN=$TG_TOKEN

RUN ls -lah
RUN ls -lah build
# RUN ls -lah configs

# make wait-for-postgres.sh executable
# RUN chmod +x /app/build/wait-for-postgres.sh


CMD ["./tg-bot-habit", "-tg-bot-token", "$TG_TOKEN"]